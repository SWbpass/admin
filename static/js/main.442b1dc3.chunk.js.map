{"version":3,"sources":["logo.svg","authHttpMapper.js","pages/Login.js","components/VisitorsTable.js","pages/Main.js","App.js","reportWebVitals.js","index.js"],"names":["API_BASE_URL","getHttp","url","config","a","checkToken","then","axios","get","setTokens","accessToken","refreshToken","setAccessToken","cookie","load","defaults","headers","common","save","path","checkLoginStatus","undefined","Login","props","useState","id","setId","password","setPassword","signIn","post","role","catch","error","alert","response","data","message","responseData","history","push","onKeyPress","e","key","className","type","placeholder","onChange","target","value","disabled","onClick","VisitorsTable","scope","visits","map","visit","store","storeName","visitor","name","entryTime","exitTime","tableContent","Main","setVisits","isLogin","setIsLogin","checkLogin","useEffect","res","visitLogs","App","basename","process","href","src","logo","alt","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAAe,G,YAAA,IAA0B,kC,wFCI5BA,EAAe,wBAIfC,EAAO,uCAAG,WAAOC,EAAKC,GAAZ,SAAAC,EAAA,sEACNC,IACRC,KADQ,sBACH,sBAAAF,EAAA,sEACWG,IAAMC,IAAIR,EAAeE,EAAKC,GADzC,oFAFS,mFAAH,wDAiCPM,EAAS,uCAAG,WAAOC,EAAaC,GAApB,SAAAP,EAAA,sDACrBQ,EAAeF,GADM,2CAAH,wDAIhBL,EAAU,uCAAG,4BAAAD,EAAA,sEACSS,IAAOC,KAAK,eADrB,OACXJ,EADW,OAEXH,IAAMQ,SAASC,QAAQC,OAAvB,+BAA2DP,GAFhD,2CAAH,qDAKVE,EAAiB,SAACF,GACpBG,IAAOK,KAAK,cAAeR,EACvB,CACIS,KAAM,OAMLC,EAAgB,uCAAG,4BAAAhB,EAAA,sEACJS,IAAOC,KAAK,eADR,cACxBJ,EADwB,8BAELW,IAAhBX,GAFqB,2CAAH,qD,OClBdY,MArCf,SAAeC,GAAQ,IAAD,IAEEC,mBAAS,IAFX,mBAEXC,EAFW,KAEPC,EAFO,OAGcF,mBAAS,IAHvB,mBAGXG,EAHW,KAGDC,EAHC,KAMZC,EAAM,uCAAG,4BAAAzB,EAAA,sEACcG,IAAMuB,KAAK9B,EAAa,eAAgB,CAC7DyB,GAAIA,EACJE,SAAUA,EACVI,KAAM,eACPC,OAAM,SAAAC,GACLC,MAAMD,EAAME,SAASC,KAAKC,YANnB,eAQUhB,KAPjBiB,EADO,wCASD7B,EAAU6B,EAAaF,KAAK1B,aAT3B,OAWPa,EAAMgB,QAAQC,KAAK,KAXZ,2CAAH,qDAeNC,EAAa,SAACC,GACF,UAAVA,EAAEC,KAAiBd,KAG3B,OACI,sBAAKe,UAAU,MAAf,+BAEI,sBAAKA,UAAU,aAAf,UACI,uBAAOC,KAAK,QAAQD,UAAU,eAAeE,YAAY,kCAASC,SAzB3D,SAAAL,GAAC,OAAIhB,EAAMgB,EAAEM,OAAOC,QAyB6DR,WAAYA,IACpG,0BAAOI,KAAK,QAAQD,UAAU,eAAeE,YAAY,yCAAzD,qBAAwE,YAAxE,0BAzBY,SAAAJ,GAAC,OAAId,EAAYc,EAAEM,OAAOC,UAyBtC,2BAA0HR,GAA1H,IACA,wBAAQI,KAAK,SAASD,UAAU,yBAAyBM,SAAiB,KAAPzB,GAA0B,KAAbE,EAAiBwB,QAAStB,EAA1G,uCCHDuB,MAhCf,SAAuB7B,GAcnB,OACI,wBAAOqB,UAAU,QAAjB,UACI,gCACA,+BACI,oBAAIS,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,gCACA,oBAAIA,MAAM,MAAV,sCACA,oBAAIA,MAAM,MAAV,2CAGJ,gCACC9B,EAAM+B,OAAOC,KAAI,SAAAC,GAAK,OAxB/B,SAAsBA,GAClB,OACI,+BACI,oBAAIH,MAAM,MAAV,SAAiBG,EAAM/B,KACvB,6BAAK+B,EAAMC,MAAMC,YACjB,6BAAKF,EAAMG,QAAQC,OACnB,6BAAKJ,EAAMK,YACX,6BAAKL,EAAMM,cAiBYC,CAAaP,YCkBrCQ,MAxCf,SAAczC,GAAQ,IAAD,EACWC,mBAAS,IADpB,mBACV8B,EADU,KACFW,EADE,OAEazC,oBAAS,GAFtB,mBAEV0C,EAFU,KAEDC,EAFC,KAIXC,EAAU,uCAAG,sBAAAhE,EAAA,sEACIgB,IADJ,cAKX+C,GAAW,GAFX5C,EAAMgB,QAAQC,KAAK,UAHR,2CAAH,qDAwBhB,OAfA6B,qBAAU,WACND,MACD,IAEHC,qBAAU,WACFH,GACAjE,EAAQ,WACHK,MAAK,SAAAgE,GACFL,EAAUK,EAAIlC,KAAKmC,cACpBvC,OAAM,SAAAC,GACTC,MAAMD,EAAME,eAErB,CAAC+B,IAIA,sBAAKtB,UAAU,MAAf,UACI,uBACA,uBACA,uEACA,uBACA,uBACA,cAAC,EAAD,CAAeU,OAAQA,QCjBpBkB,MAff,WAEI,OACI,eAAC,IAAD,CAAQC,SAAUC,GAAlB,UACI,qBAAK9B,UAAU,+BAAf,SACI,oBAAGA,UAAU,eAAe+B,KAAK,IAAjC,cAAsC,qBAAKC,IAAKC,EAAMC,IAAKD,SAE/D,eAAC,IAAD,WACI,cAAC,IAAD,CAAOE,OAAK,EAAC5D,KAAK,IAAI6D,UAAWhB,IACjC,cAAC,IAAD,CAAO7C,KAAK,SAAS6D,UAAW1D,WCJjC2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7E,MAAK,YAAkD,IAA/C8E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.442b1dc3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ac359950.svg\";","import axios from 'axios';\nimport cookie from 'react-cookies'\n\n//export const API_BASE_URL = \"https://b-pass.herokuapp.com\";\nexport const API_BASE_URL = \"http://localhost:8081\";\n\nexport const logout = async () => cookie.remove('accessToken');\n\nexport const getHttp = async (url, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.get(API_BASE_URL + url, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        });\n\n};\n\nexport const postHttp = async (url, body, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.post(API_BASE_URL + url, body, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        })\n};\n\nexport const putHttp = async (url, body, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.put(API_BASE_URL + url, body, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        })\n};\n\nexport const deleteHttp = async (url, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.delete(API_BASE_URL + url, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        });\n};\n\nexport const setTokens = async (accessToken, refreshToken) => {\n    setAccessToken(accessToken);\n};\n\nconst checkToken = async () => {\n    let accessToken = await cookie.load('accessToken');\n        axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n};\n\nconst setAccessToken = (accessToken) => {\n    cookie.save('accessToken', accessToken,\n        {\n            path: '/',\n            //secure: true\n            //httpOnly: true\n        });\n};\n\nexport const checkLoginStatus = async () => {\n    let accessToken = await cookie.load('accessToken');\n    return accessToken !== undefined;\n};","import React, {useEffect, useState} from 'react';\nimport {API_BASE_URL, setTokens} from \"../authHttpMapper\";\nimport axios from \"axios\";\n\nfunction Login(props) {\n\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const onChangeId = e => setId(e.target.value);\n    const onChangePawword = e => setPassword(e.target.value);\n    const signIn = async () => {\n        let responseData = await axios.post(API_BASE_URL+'/auth/signin', {\n            id: id,\n            password: password,\n            role: \"ROLE_ADMIN\"\n        }).catch(error => {\n            alert(error.response.data.message)\n        });\n        if (responseData !== undefined) {\n            await setTokens(responseData.data.accessToken);\n\n            props.history.push('/')\n        }\n    };\n\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter') signIn();\n    }\n\n    return (\n        <div className=\"App\">\n            로그인\n            <div className=\"form-group\">\n                <input type=\"email\" className=\"form-control\" placeholder=\"아이디 입력\" onChange={onChangeId} onKeyPress={onKeyPress}></input>\n                <input type=\"email\" className=\"form-control\" placeholder=\"비밀번호 입력\" type='password' onChange={onChangePawword} onKeyPress={onKeyPress} ></input>\n                <button type=\"button\" className=\"btn btn-primary btn-lg\" disabled={id === '' || password === ''} onClick={signIn}>로그인</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;\n","function VisitorsTable(props) {\n\n    function tableContent(visit) {\n        return (\n            <tr>\n                <th scope=\"row\">{visit.id}</th>\n                <td>{visit.store.storeName}</td>\n                <td>{visit.visitor.name}</td>\n                <td>{visit.entryTime}</td>\n                <td>{visit.exitTime}</td>\n            </tr>\n        )\n    }\n\n    return (\n        <table className=\"table\">\n            <thead>\n            <tr>\n                <th scope=\"col\">visitId</th>\n                <th scope=\"col\">장소</th>\n                <th scope=\"col\">방문자</th>\n                <th scope=\"col\">입장시간</th>\n                <th scope=\"col\">퇴장시간</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.visits.map(visit => tableContent(visit))}\n            </tbody>\n        </table>\n    )\n}\n\nexport default VisitorsTable;\n","import React, {useEffect, useState} from 'react';\nimport {checkLoginStatus, getHttp} from \"../authHttpMapper\";\nimport VisitorsTable from \"../components/VisitorsTable\";\n\nfunction Main(props) {\n    const [visits, setVisits] = useState([])\n    const [isLogin, setIsLogin] = useState(false)\n\n    const checkLogin = async () => {\n        let status = await checkLoginStatus();\n        if (!status)\n            props.history.push(\"/login\")\n        else\n            setIsLogin(true)\n\n    };\n\n    useEffect(() => {\n        checkLogin()\n    }, [])\n\n    useEffect(() => {\n        if (isLogin)\n            getHttp(\"/visits\")\n                .then(res => {\n                    setVisits(res.data.visitLogs)\n                }).catch(error => {\n                alert(error.response)\n            });\n    }, [isLogin])\n\n\n    return (\n        <div className=\"App\">\n            <br/>\n            <br/>\n            <h1>출입자 리스트</h1>\n            <br/>\n            <br/>\n            <VisitorsTable visits={visits}/>\n        </div>\n    );\n}\n\nexport default Main;\n","import './App.css';\nimport logo from './logo.svg';\nimport React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Login from \"./pages/Login\";\nimport Main from \"./pages/Main\";\n\nfunction App() {\n\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <nav className=\"navbar navbar-light bg-light\">\n                <a className=\"navbar-brand\" href=\"#\"> <img src={logo} alt={logo}/></a>\n            </nav>\n            <Switch>\n                <Route exact path='/' component={Main}/>\n                <Route path='/login' component={Login}/>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}